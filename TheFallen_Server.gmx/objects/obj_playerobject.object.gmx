<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_playerobject</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xspeed        = 0;
yspeed        = 0;
zspeed        = 0;
bxspeed       = 0;
byspeed       = 0;
bzspeed       = 0;
z             = 0;
zprevious     = 0;
zheight       = 64;
headz         = 56;
dir           = 0;
pit           = 0;
dirprev       = 0;
pitprev       = 0;
speed_factor  = 1.6;
tempArray[7]  = -1;
grav          = 0.25;
mode          = 1;
phlth         = 128;
pengy         = 96;
phngr         = 96;
pthst         = 96;
ptemp         = 128;
max_hlth      = 128;
max_engy      = 96;
max_hngr      = 96;
max_thst      = 96;
max_temp      = 128;
pcurrent_item = 0;
lb_trig       = false;
/*  modes:
0 = idle;
1 = walking;
2 = running;
3 = crouch;
4 = airborne;
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>tempArray[0] = socket;
tempArray[1] = ds_list_create();
with(obj_playerobject)
{
    if(socket != other.tempArray[0])
    {
        ds_list_add(other.tempArray[1],socket);
    }
}
var buff_ = buffer_create(256,buffer_grow,1);
buffer_write(buff_,buffer_u16,3);
buffer_write(buff_,buffer_s16,socket);
var sz_ = ds_list_size(tempArray[1]);
show_debug_message("send player destroy data");
for(i = 0; i &lt; sz_; i++)
{
    network_send_packet(ds_list_find_value(tempArray[1],i),buff_,buffer_tell(buff_));
}
buffer_delete(buff_);
ds_list_destroy(tempArray[1]);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var _precision = 4; //try to keep above or equal to 4, and preferably at multiples of 4
if(!box_in_col(x-(sprite_width/2),y-(sprite_height/2),z-1,x+(sprite_height/2),y+(sprite_height/2),z+zheight))
{
    mode = 4;
}
if(bxspeed == 0 &amp;&amp; byspeed == 0) engy += 0.5;
var br_ = false;
var br2_ = false;
if(alarm[0] &gt; 0) br2_ = true;
if(mode == 3 &amp;&amp; engy &lt; 1)
{
    br_ = true;
    alarm[0] = 60;
}
switch(mode)
{
    case 0: //idle, not currently in use
        //don't apply to x/yspeed
        headz = (headz+56)/2;
        if(br2_)
            engy += 0.2;
        break;
    case 1: //walking
        xspeed += bxspeed;
        yspeed += byspeed;
        headz = (headz+56)/2;
        //if(br2_)
            engy += 0.5;
        break;
    case 2: //running
        if(br_) break;
        xspeed += bxspeed*2;
        yspeed += byspeed*2;
        headz = (headz+56)/2;
        //if(br2_)
            engy -= 1.5;
        break;
    case 3: //crouch
        xspeed += bxspeed/2;
        yspeed += byspeed/2;
        headz = (headz+28)/2;
        //if(br2_)
            engy += 0.75;
        break;
    case 4: //airbone
        xspeed += bxspeed/3;
        yspeed += byspeed/3;
        headz = (headz+56)/2;
        //engy += 0;
        break;
}
zspeed += bzspeed-grav;
bxspeed = 0;
byspeed = 0;
bzspeed = 0;

hlth = clamp(hlth,0,max_hlth);
engy = clamp(engy,0,max_engy);
hngr = clamp(hngr,0,max_hngr);
thst = clamp(thst,0,max_thst);
temp = clamp(temp,0,max_temp);

if(mode != 4)
{
    xspeed /= speed_factor;
    yspeed /= speed_factor;
}
else
{
    xspeed /= ((speed_factor-1)/8)+1;
    yspeed /= ((speed_factor-1)/8)+1;
}
box_col_dyn(_precision);

tempArray[4] = false;
with(obj_item)
{
    if(point_distance_3d(x,y,z,other.x,other.y,other.z) &lt; 24)
    {
        other.current_item = item;
    }
}

if(lb_trig &amp;&amp; current_item == 1)
{
    var inst_ = instance_create(x+lengthdir_x(32,dir),y+lengthdir_y(32,dir),obj_bullet);
    inst_.z      = z+(headz/2);
    var spd_ = 24;
    inst_.xspeed = d3d_lengthdir_x(spd_,-dir,pit);
    inst_.yspeed = d3d_lengthdir_y(spd_,-dir,pit);
    inst_.zspeed = d3d_lengthdir_z(spd_,-dir,pit);
    inst_.dmg    = 8;
}

var update_ = false;
if(x != xprevious || y != yprevious || z != zprevious
    || dirprev != dir || pitprev != pit || phlth != hlth
    || pengy != engy || phngr != hngr || pthst != thst || ptemp != temp
    || pcurrent_item != current_item)
{
    update_ = true;
}
if(update_)
{
    show_debug_message(string(id) + " has updated!");
    ds_list_add(global.array[1],id);
}



//end
zprevious     = z;
dirprev       = dir;
pitprev       = pit;
pcurrent_item = current_item;
phlth         = hlth;
pengy         = engy;
phngr         = hngr;
pthst         = thst;
ptemp         = temp;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
draw_text(x+16,y-16,"sock: " + string(socket));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
