<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>d3d_start();
draw_set_color(c_white);
skybox = 0;
/* skyboxes:
0 = default;
1 = nothing here yet...
*/
sky_left  = -1;
sky_right = -1;
sky_front = -1;
sky_back  = -1;
sky_top   = -1;

fog_enabled = false;
fog_color   = c_black;
fog_start   = 128;
fog_end     = 512;

zbuff_enabled = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(skybox)
{
    case 0:
        sky_left  = global.texture_sky_bl_blue2_left;
        sky_right = global.texture_sky_bl_blue2_right;
        sky_back  = global.texture_sky_bl_blue2_back;
        sky_front = global.texture_sky_bl_blue2_front;
        sky_top   = global.texture_sky_bl_blue2_top;
        break;
    default:
        sky_left  = -1;
        sky_right = -1;
        sky_back  = -1;
        sky_front = -1;
        sky_top   = -1;
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>d3d_end();
d3d_set_fog(false,-1,-1,-1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>d3d_set_depth(-499);
//d3d_set_zwriteenable(false);
d3d_set_fog(false,fog_color,fog_start,fog_end);
d3d_draw_wall(obj_camera.x-fog_end,obj_camera.y-fog_end,obj_camera.z+fog_end,obj_camera.x+fog_end,obj_camera.y-fog_end,obj_camera.z-fog_end,sky_left ,1,1);
d3d_draw_wall(obj_camera.x+fog_end,obj_camera.y-fog_end,obj_camera.z+fog_end,obj_camera.x+fog_end,obj_camera.y+fog_end,obj_camera.z-fog_end,sky_front,1,1);
d3d_draw_wall(obj_camera.x+fog_end,obj_camera.y+fog_end,obj_camera.z+fog_end,obj_camera.x-fog_end,obj_camera.y+fog_end,obj_camera.z-fog_end,sky_right,1,1);
d3d_draw_wall(obj_camera.x-fog_end,obj_camera.y+fog_end,obj_camera.z+fog_end,obj_camera.x-fog_end,obj_camera.y-fog_end,obj_camera.z-fog_end,sky_back ,1,1);
d3d_draw_floor(obj_camera.x+fog_end,obj_camera.y-fog_end,obj_camera.z+fog_end,obj_camera.x-fog_end,obj_camera.y+fog_end,obj_camera.z+fog_end,sky_top ,1,1);
d3d_set_fog(fog_enabled,fog_color,fog_start,fog_end);
//d3d_set_zwriteenable(zbuff_enabled);
d3d_set_depth(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
