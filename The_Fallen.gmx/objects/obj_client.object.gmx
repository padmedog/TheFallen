<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>client_socket = network_create_socket(network_socket_tcp);
if(client_socket &lt; 0)
{
    show_message("failed to create socket");
    game_end();
}
client_server = network_connect(client_socket,
    get_string("Type in the ip to connect to,# without the port","127.0.0.1"),
    get_integer("Type in the port to connect to",5524));
if(client_server &lt; 0)
{
    show_message("failed to connect to server");
    game_end();
}
tempArray[4] = -1;
can_look = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(obj_player))
{
    var lr_ = keyboard_check(ord("D"))-keyboard_check(ord("A"));
    var ud_ = keyboard_check(ord("S"))-keyboard_check(ord("W"));
    var ju_ = keyboard_check(vk_space);
    if(keyboard_check_pressed(ord("V"))) can_look = !can_look;
    if(can_look)
    {
        var wd_ = window_get_width()/2;
        var ht_ = window_get_height()/2;
        var am_ = 4;
        obj_player.dir -= (window_mouse_get_x()-wd_)/am_;
        obj_player.pit -= (window_mouse_get_y()-ht_)/am_;
        window_mouse_set(wd_,ht_);
    }
    
    if(lr_ != 0 || ud_ != 0 || obj_player.prev_dir != obj_player.dir || obj_player.prev_pit != obj_player.pit || ju_)
    {
        var buff_ = buffer_create(256,buffer_grow,1);
        buffer_write(buff_,buffer_u16 ,0             );
        buffer_write(buff_,buffer_f32 ,obj_player.dir);
        buffer_write(buff_,buffer_f32 ,obj_player.pit);
        buffer_write(buff_,buffer_s8  ,lr_           );
        buffer_write(buff_,buffer_s8  ,ud_           );
        buffer_write(buff_,buffer_bool,ju_           );
        network_send_packet(client_server,buff_,buffer_tell(buff_));
        buffer_delete(buff_);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var as_type = ds_map_find_value(async_load,"type");
var as_id   = ds_map_find_value(async_load,"id");
switch(as_type)
{
    case network_type_data:
        var as_buffer = ds_map_find_value(async_load,"buffer");
        data_received(as_id,as_buffer);
        break;
    default:
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
